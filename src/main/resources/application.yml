spring:
  datasource:
    url: jdbc:mariadb://dali.ccfjtnrgb0pm.ap-northeast-2.rds.amazonaws.com:3306/dali
    username: ${MARIA_DB_ID}
    password: ${MARIA_DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.MariaDB106Dialect
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  logging:
    level:
      org.hibernate.SQL: debug

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://ec2-43-201-131-23.ap-northeast-2.compute.amazonaws.com:8080/oauth2/callback/naver
            authorization-grant-type: authorization_code
            scope: name, email, nickname, profile, gender
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  output:
    ansi:
      enabled: always

jwt:
  secret: f2c2eb053b4697c93260fb7b30ae347c23f7a439e070d6dbd56273523b32e7d063e44e5eca2c37d1e2e00eeac77bffc00ab98ab9dd0c1a84312673eeb618d1f2

app:
  oauth2:
    authorizedRedirectUri: http://ec2-43-201-131-23.ap-northeast-2.compute.amazonaws.com:8080/oauth2/redirect

slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL}